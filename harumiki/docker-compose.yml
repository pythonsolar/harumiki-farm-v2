version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: harumiki_redis_3000
   # ports:
    #  - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - django-network

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    image: harumiki:latest
    container_name: harumiki_farm_web_3000
    #ports:
     # - "3000:8000"
    env_file:
      - .env.production
    environment:
      - DJANGO_SETTINGS_MODULE=harumiki.settings
      - REDIS_URL=redis://redis:6379/1
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/media
      - logs_volume:/code/logs
      - ./.env:/code/.env:ro 
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - django-network

  nginx:
     image: nginx:1.21-alpine
     container_name: harumiki_nginx_3000
     ports:
       - "3000:80"
       - "443:443"
     volumes:
       - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
       - static_volume:/static:ro
       - media_volume:/media:ro
     depends_on:
       web:
         condition: service_healthy
     restart: unless-stopped
     networks:
       - django-network

volumes:
  static_volume:
  media_volume:
  logs_volume:
  redis_data:

networks:
  django-network:
    driver: bridge